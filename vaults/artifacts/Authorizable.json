{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107a28061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063485d7d9414610067578063715018a6146100835780638da5cb5b1461008d578063b9181611146100ab578063cf1c316a146100db578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c91906105a3565b610113565b005b61008b610223565b005b6100956102ab565b6040516100a29190610690565b60405180910390f35b6100c560048036038101906100c091906105a3565b6102d4565b6040516100d291906106ab565b60405180910390f35b6100f560048036038101906100f091906105a3565b6102f4565b005b610111600480360381019061010c91906105a3565b6103ca565b005b61011b6104c2565b73ffffffffffffffffffffffffffffffffffffffff166101396102ab565b73ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610186906106e6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101c857600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61022b6104c2565b73ffffffffffffffffffffffffffffffffffffffff166102496102ab565b73ffffffffffffffffffffffffffffffffffffffff161461029f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610296906106e6565b60405180910390fd5b6102a960006104ca565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6102fc6104c2565b73ffffffffffffffffffffffffffffffffffffffff1661031a6102ab565b73ffffffffffffffffffffffffffffffffffffffff1614610370576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610367906106e6565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103d26104c2565b73ffffffffffffffffffffffffffffffffffffffff166103f06102ab565b73ffffffffffffffffffffffffffffffffffffffff1614610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d906106e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad906106c6565b60405180910390fd5b6104bf816104ca565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061059d81610755565b92915050565b6000602082840312156105b557600080fd5b60006105c38482850161058e565b91505092915050565b6105d581610717565b82525050565b6105e481610729565b82525050565b60006105f7602683610706565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061065d602083610706565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106a560008301846105cc565b92915050565b60006020820190506106c060008301846105db565b92915050565b600060208201905081810360008301526106df816105ea565b9050919050565b600060208201905081810360008301526106ff81610650565b9050919050565b600082825260208201905092915050565b600061072282610735565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61075e81610717565b811461076957600080fd5b5056fea2646970667358221220948bf22940c8c0c54ac89a62bee4f2a9e8449af6c8fd9f1ccac9a967791a52b364736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7A2 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485D7D94 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xCF1C316A EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x223 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139 PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x22B PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x249 PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 PUSH1 0x0 PUSH2 0x4CA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31A PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3F0 PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4BF DUP2 PUSH2 0x4CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x59D DUP2 PUSH2 0x755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C3 DUP5 DUP3 DUP6 ADD PUSH2 0x58E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x717 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5E4 DUP2 PUSH2 0x729 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x26 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D PUSH1 0x20 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DF DUP2 PUSH2 0x5EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6FF DUP2 PUSH2 0x650 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x717 JUMP JUMPDEST DUP2 EQ PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP12 CALLCODE 0x29 BLOCKHASH 0xC8 0xC0 0xC5 0x4A 0xC8 SWAP11 PUSH3 0xBEE4F2 0xA9 0xE8 DIFFICULTY SWAP11 0xF6 0xC8 REVERT SWAP16 SHR 0xCA 0xC9 0xA9 PUSH8 0x791A52B364736F6C PUSH4 0x43000800 STOP CALLER ",
			"sourceMap": "111:488:2:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;111:488:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;111:488:2:-;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:3295:3",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:3"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "107:26:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:3"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:3",
										"type": ""
									}
								],
								"src": "7:139:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "218:196:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "264:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "273:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "276:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "266:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "266:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "266:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "239:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "248:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "235:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "235:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "260:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "231:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "231:32:3"
											},
											"nodeType": "YulIf",
											"src": "228:2:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "290:117:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "305:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "319:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "309:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "334:63:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "380:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "365:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "389:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "344:20:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "344:53:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "334:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "188:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "199:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "211:6:3",
										"type": ""
									}
								],
								"src": "152:262:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "485:53:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "502:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "525:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "507:17:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "507:24:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "495:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "495:37:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "495:37:3"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "473:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "480:3:3",
										"type": ""
									}
								],
								"src": "420:118:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "603:50:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "620:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "640:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "625:14:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "625:21:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "613:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "613:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "613:34:3"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "591:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "598:3:3",
										"type": ""
									}
								],
								"src": "544:109:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "805:224:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "815:74:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "881:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "886:2:3",
														"type": "",
														"value": "38"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "822:58:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "822:67:3"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "815:3:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "910:3:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "915:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "906:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "906:11:3"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "919:34:3",
														"type": "",
														"value": "Ownable: new owner is the zero a"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "899:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "899:55:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "899:55:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "975:3:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "980:2:3",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "971:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "971:12:3"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "985:8:3",
														"type": "",
														"value": "ddress"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "964:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "964:30:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "964:30:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1004:19:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1015:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1020:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1011:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1011:12:3"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "1004:3:3"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "793:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "801:3:3",
										"type": ""
									}
								],
								"src": "659:370:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1181:184:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1191:74:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1257:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1262:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1198:58:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1198:67:3"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "1191:3:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1286:3:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1291:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1282:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1282:11:3"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "1295:34:3",
														"type": "",
														"value": "Ownable: caller is not the owner"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1275:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1275:55:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1275:55:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1340:19:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1351:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1356:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1347:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1347:12:3"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "1340:3:3"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1169:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "1177:3:3",
										"type": ""
									}
								],
								"src": "1035:330:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1469:124:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1479:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1491:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1502:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1487:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1487:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1479:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1559:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1572:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1583:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1568:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1568:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1515:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1515:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1515:71:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1441:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1453:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1464:4:3",
										"type": ""
									}
								],
								"src": "1371:222:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1691:118:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1701:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1713:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1724:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1709:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1709:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1701:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1775:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1788:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1799:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1784:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1784:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1737:37:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1737:65:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1737:65:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1663:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1675:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1686:4:3",
										"type": ""
									}
								],
								"src": "1599:210:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1986:248:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1996:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2008:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2019:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2004:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2004:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1996:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2043:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2054:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2039:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2039:17:3"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2062:4:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2068:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2058:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2058:20:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2032:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2032:47:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2032:47:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2088:139:3",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "2222:4:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2096:124:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2096:131:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2088:4:3"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1966:9:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1981:4:3",
										"type": ""
									}
								],
								"src": "1815:419:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2411:248:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2421:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2433:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2444:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2429:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2429:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2421:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2468:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2479:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2464:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2464:17:3"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2487:4:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2493:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2483:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2483:20:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2457:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2457:47:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2457:47:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2513:139:3",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "2647:4:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2521:124:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2521:131:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2513:4:3"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2391:9:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2406:4:3",
										"type": ""
									}
								],
								"src": "2240:419:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2761:73:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2778:3:3"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2783:6:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2771:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2771:19:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2771:19:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2799:29:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2818:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2823:4:3",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2814:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2814:14:3"
											},
											"variableNames": [
												{
													"name": "updated_pos",
													"nodeType": "YulIdentifier",
													"src": "2799:11:3"
												}
											]
										}
									]
								},
								"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2733:3:3",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "2738:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "updated_pos",
										"nodeType": "YulTypedName",
										"src": "2749:11:3",
										"type": ""
									}
								],
								"src": "2665:169:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2885:51:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2895:35:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2924:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2906:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2906:24:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2895:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2867:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2877:7:3",
										"type": ""
									}
								],
								"src": "2840:96:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2984:48:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2994:32:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3019:5:3"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "3012:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3012:13:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3005:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3005:21:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2994:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2966:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2976:7:3",
										"type": ""
									}
								],
								"src": "2942:90:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3083:81:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3093:65:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3108:5:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3115:42:3",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "3104:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3104:54:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "3093:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3065:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "3075:7:3",
										"type": ""
									}
								],
								"src": "3038:126:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3213:79:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3270:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3279:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3282:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3272:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3272:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3272:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3236:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3261:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3243:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:24:3"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3233:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3233:35:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3226:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3226:43:3"
											},
											"nodeType": "YulIf",
											"src": "3223:2:3"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3206:5:3",
										"type": ""
									}
								],
								"src": "3170:122:3"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 3,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063485d7d9414610067578063715018a6146100835780638da5cb5b1461008d578063b9181611146100ab578063cf1c316a146100db578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c91906105a3565b610113565b005b61008b610223565b005b6100956102ab565b6040516100a29190610690565b60405180910390f35b6100c560048036038101906100c091906105a3565b6102d4565b6040516100d291906106ab565b60405180910390f35b6100f560048036038101906100f091906105a3565b6102f4565b005b610111600480360381019061010c91906105a3565b6103ca565b005b61011b6104c2565b73ffffffffffffffffffffffffffffffffffffffff166101396102ab565b73ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610186906106e6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101c857600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61022b6104c2565b73ffffffffffffffffffffffffffffffffffffffff166102496102ab565b73ffffffffffffffffffffffffffffffffffffffff161461029f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610296906106e6565b60405180910390fd5b6102a960006104ca565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6102fc6104c2565b73ffffffffffffffffffffffffffffffffffffffff1661031a6102ab565b73ffffffffffffffffffffffffffffffffffffffff1614610370576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610367906106e6565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103d26104c2565b73ffffffffffffffffffffffffffffffffffffffff166103f06102ab565b73ffffffffffffffffffffffffffffffffffffffff1614610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d906106e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad906106c6565b60405180910390fd5b6104bf816104ca565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061059d81610755565b92915050565b6000602082840312156105b557600080fd5b60006105c38482850161058e565b91505092915050565b6105d581610717565b82525050565b6105e481610729565b82525050565b60006105f7602683610706565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061065d602083610706565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106a560008301846105cc565b92915050565b60006020820190506106c060008301846105db565b92915050565b600060208201905081810360008301526106df816105ea565b9050919050565b600060208201905081810360008301526106ff81610650565b9050919050565b600082825260208201905092915050565b600061072282610735565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61075e81610717565b811461076957600080fd5b5056fea2646970667358221220948bf22940c8c0c54ac89a62bee4f2a9e8449af6c8fd9f1ccac9a967791a52b364736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485D7D94 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xCF1C316A EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x223 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139 PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x22B PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x249 PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 PUSH1 0x0 PUSH2 0x4CA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31A PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3F0 PUSH2 0x2AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4BF DUP2 PUSH2 0x4CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x59D DUP2 PUSH2 0x755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C3 DUP5 DUP3 DUP6 ADD PUSH2 0x58E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x717 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5E4 DUP2 PUSH2 0x729 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x26 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D PUSH1 0x20 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DF DUP2 PUSH2 0x5EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6FF DUP2 PUSH2 0x650 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x717 JUMP JUMPDEST DUP2 EQ PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP12 CALLCODE 0x29 BLOCKHASH 0xC8 0xC0 0xC5 0x4A 0xC8 SWAP11 PUSH3 0xBEE4F2 0xA9 0xE8 DIFFICULTY SWAP11 0xF6 0xC8 REVERT SWAP16 SHR 0xCA 0xC9 0xA9 PUSH8 0x791A52B364736F6C PUSH4 0x43000800 STOP CALLER ",
			"sourceMap": "111:488:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;150:42:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;343:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;447:150:2;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;540:10:2::1;527:23;;:9;:23;;;;519:32;;;::::0;::::1;;585:5;561:10;:21;572:9;561:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;447:150:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;150:42:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;343:98::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;430:4:2::1;409:10:::0;:18:::1;420:6;409:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;343:98:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:370::-;;822:67;886:2;881:3;822:67;:::i;:::-;815:74;;919:34;915:1;910:3;906:11;899:55;985:8;980:2;975:3;971:12;964:30;1020:2;1015:3;1011:12;1004:19;;805:224;;;:::o;1035:330::-;;1198:67;1262:2;1257:3;1198:67;:::i;:::-;1191:74;;1295:34;1291:1;1286:3;1282:11;1275:55;1356:2;1351:3;1347:12;1340:19;;1181:184;;;:::o;1371:222::-;;1502:2;1491:9;1487:18;1479:26;;1515:71;1583:1;1572:9;1568:17;1559:6;1515:71;:::i;:::-;1469:124;;;;:::o;1599:210::-;;1724:2;1713:9;1709:18;1701:26;;1737:65;1799:1;1788:9;1784:17;1775:6;1737:65;:::i;:::-;1691:118;;;;:::o;1815:419::-;;2019:2;2008:9;2004:18;1996:26;;2068:9;2062:4;2058:20;2054:1;2043:9;2039:17;2032:47;2096:131;2222:4;2096:131;:::i;:::-;2088:139;;1986:248;;;:::o;2240:419::-;;2444:2;2433:9;2429:18;2421:26;;2493:9;2487:4;2483:20;2479:1;2468:9;2464:17;2457:47;2521:131;2647:4;2521:131;:::i;:::-;2513:139;;2411:248;;;:::o;2665:169::-;;2783:6;2778:3;2771:19;2823:4;2818:3;2814:14;2799:29;;2761:73;;;;:::o;2840:96::-;;2906:24;2924:5;2906:24;:::i;:::-;2895:35;;2885:51;;;:::o;2942:90::-;;3019:5;3012:13;3005:21;2994:32;;2984:48;;;:::o;3038:126::-;;3115:42;3108:5;3104:54;3093:65;;3083:81;;;:::o;3170:122::-;3243:24;3261:5;3243:24;:::i;:::-;3236:5;3233:35;3223:2;;3282:1;3279;3272:12;3223:2;3213:79;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "390800",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"addAuthorized(address)": "22418",
				"authorized(address)": "1589",
				"owner()": "1244",
				"removeAuthorized(address)": "22367",
				"renounceOwnership()": "24374",
				"transferOwnership(address)": "24811"
			}
		},
		"methodIdentifiers": {
			"addAuthorized(address)": "cf1c316a",
			"authorized(address)": "b9181611",
			"owner()": "8da5cb5b",
			"removeAuthorized(address)": "485d7d94",
			"renounceOwnership()": "715018a6",
			"transferOwnership(address)": "f2fde38b"
		}
	},
	"abi": [
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_toAdd",
					"type": "address"
				}
			],
			"name": "addAuthorized",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "authorized",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_toRemove",
					"type": "address"
				}
			],
			"name": "removeAuthorized",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}